"""Process the image index csv file created by the image generator script.
This script separates the original index file into two indexes (pass/fail index, and defect index) without modifying the original index file.
Then 2 more indexes are generated by shuffling these 2 indexes (the originals are not modified).
The new indexes will be created in the same directory as the original index.

The pass/fail index contains all the images (names) and whether or not they contain any defects,
while the defect index contains all the images which contain at least 1 defect, and their defects.
"""

import os, sys
import csv
import pandas as pd


def separateIndex(index_path : str):
    """Separate the index file into two indexes. One of which contains whether the img contains any defects (pass/fail),
    and the other one which contains the defects of all the images which have at least one defect.
    The new indexes (index_pass_fail, index_defects) are saved into the directory of the original index.
    """

    # Input index
    index_file = open(index_path, "r", newline = '')
    index_reader = csv.reader(index_file)
    
    # Pass/fail output index
    pass_index = open(os.path.join(os.path.dirname(index_path), "index_pass_fail.csv"), "w", newline = '')
    pass_writer = csv.writer(pass_index)
    # Defect output index
    defect_index = open(os.path.join(os.path.dirname(index_path), "index_defects.csv"), "w", newline = '')
    defect_writer = csv.writer(defect_index)

    num_good = 0
    num_bad = 0
    for line in index_reader:
        # Header row
        if line[0] == "Filenames":
            pass_writer.writerow([line[0], "pass"])
            defect_writer.writerow(line)
            continue
        else:
            if "1" in line: # Defect
                num_bad += 1
                pass_writer.writerow([line[0], "0"])
                defect_writer.writerow(line)
            else:   # No defect
                num_good += 1
                pass_writer.writerow([line[0], "1"])


    index_file.close()
    pass_index.close()
    defect_index.close()

    print("\nIndexes separated.\n (out: ", os.path.join(os.path.dirname(index_path), "index_pass_fail.csv"), "\n       ",
          os.path.join(os.path.dirname(index_path), "index_defects.csv"), ")", sep = '')

    print("\nThe overall number of images: ", num_good + num_bad)
    print("Number of images without a defect: ", num_good)
    print("Number of images with a defect: ", num_bad, "\n")


def shuffleIndex(index_path : str):
    """Create a shuffled copy of the image index in the same directory as the original index.
    """

    df = pd.read_csv(index_path)
    df = df.sample(frac = 1).reset_index(drop = True)
    
    out_path = os.path.splitext(index_path)[0] + "_shuffled.csv"
    df.to_csv(out_path, index = False)

    print(index_path, " shuffled (", out_path, ").", sep = '')


def main():

    # Get the path of the index file (first arg)
    if len(sys.argv) > 1:
        main_index_path = sys.argv[1]
    # Default path
    else:
        main_index_path = "S:\\source\\image-generator\\out\\index.csv"

    separateIndex(main_index_path)
    
    shuffleIndex(os.path.join(os.path.dirname(main_index_path), "index_pass_fail.csv"))
    shuffleIndex(os.path.join(os.path.dirname(main_index_path), "index_defects.csv"))


if __name__ == "__main__":
    main()